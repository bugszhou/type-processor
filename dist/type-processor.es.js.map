{"version":3,"file":"type-processor.es.js","sources":["../src/DefaultProcessor.ts","../src/ProcessorBase.ts","../src/index.ts"],"sourcesContent":["import ProcessorBase from \"./ProcessorBase\";\n\nexport default class DefaultProcessor implements ProcessorBase {\n  private elementData = null;\n\n  constructor(options: any) {\n    this.elementData = options;\n  }\n\n  getData() {\n    return this.elementData;\n  }\n\n  process() {\n    console.error(`No Processor, currentElement is ${this.getData()}`);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nexport interface IProcessor<IReturn = any> {\n  getData(): IReturn;\n  process(): IReturn | Promise<IReturn>;\n}\n\nabstract class ProcessorBase implements IProcessor {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(opts?: any) {}\n\n  abstract getData(): any;\n  abstract process(): any;\n}\n\nexport type IProcessorType<T extends abstract new (...opts: any[]) => any> = {\n  new (...opts: any[]): InstanceType<T>;\n};\n\nexport default ProcessorBase;\n","import DefaultProcessor from \"./DefaultProcessor\";\nimport ProcessorBase, { IProcessor, IProcessorType } from \"./ProcessorBase\";\n\nexport { ProcessorBase, IProcessorType };\n\nexport type IMappingProcessor<T = typeof ProcessorBase> = IProcessorType<\n  T extends typeof ProcessorBase ? T : any\n>;\n\nexport default class TypeProcessor<IReturn = any> {\n  /**\n   * 重写类型映射\n   */\n  protected processorsMapping: Record<number | string, IMappingProcessor> = {};\n\n  /**\n   * 覆盖老的映射关系或者新增映射关系\n   */\n  protected moreProcessorsMapping: Record<number | string, IMappingProcessor> =\n    {};\n\n  private currentElement: string | number = \"\";\n\n  private updateTypeMapping() {\n    if (!this.processorsMapping) {\n      this.processorsMapping = {};\n    }\n    this.processorsMapping = {\n      ...this.processorsMapping,\n      ...this.moreProcessorsMapping,\n    };\n  }\n\n  getCurrentElement() {\n    return this.currentElement;\n  }\n\n  setCurrentElement(val: number | string) {\n    this.currentElement = val;\n  }\n\n  getActor(params?: any): IProcessor<IReturn> | undefined {\n    this.updateTypeMapping();\n    try {\n      const Actor =\n        this.processorsMapping[this.getCurrentElement()] || DefaultProcessor;\n\n      if (!Actor) {\n        return;\n      }\n\n      const actor = new Actor(params);\n\n      return actor;\n    } catch (e) {\n      console.error(e);\n      return;\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,gBAAA,kBAAA,YAAA;AAGE,IAAA,SAAA,gBAAA,CAAY,OAAY,EAAA;QAFhB,IAAW,CAAA,WAAA,GAAG,IAAI,CAAC;AAGzB,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;KAC5B;AAED,IAAA,gBAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;QACE,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB,CAAA;AAED,IAAA,gBAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;QACE,OAAO,CAAC,KAAK,CAAC,kCAAmC,CAAA,MAAA,CAAA,IAAI,CAAC,OAAO,EAAE,CAAE,CAAC,CAAC;KACpE,CAAA;IACH,OAAC,gBAAA,CAAA;AAAD,CAAC,EAAA,CAAA;;ACVD,IAAA,aAAA,kBAAA,YAAA;;AAEE,IAAA,SAAA,aAAA,CAAY,IAAU,EAAA;KAAI;IAI5B,OAAC,aAAA,CAAA;AAAD,CAAC,EAAA;;ACHD,IAAA,aAAA,kBAAA,YAAA;AAAA,IAAA,SAAA,aAAA,GAAA;AACE;;AAEG;QACO,IAAiB,CAAA,iBAAA,GAA+C,EAAE,CAAC;AAE7E;;AAEG;QACO,IAAqB,CAAA,qBAAA,GAC7B,EAAE,CAAC;QAEG,IAAc,CAAA,cAAA,GAAoB,EAAE,CAAC;KAsC9C;AApCS,IAAA,aAAA,CAAA,SAAA,CAAA,iBAAiB,GAAzB,YAAA;AACE,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AAC3B,YAAA,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;AAC7B,SAAA;QACD,IAAI,CAAC,iBAAiB,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACjB,IAAI,CAAC,iBAAiB,CAAA,EACtB,IAAI,CAAC,qBAAqB,CAC9B,CAAC;KACH,CAAA;AAED,IAAA,aAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,YAAA;QACE,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B,CAAA;IAED,aAAiB,CAAA,SAAA,CAAA,iBAAA,GAAjB,UAAkB,GAAoB,EAAA;AACpC,QAAA,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;KAC3B,CAAA;IAED,aAAQ,CAAA,SAAA,CAAA,QAAA,GAAR,UAAS,MAAY,EAAA;QACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI;AACF,YAAA,IAAM,KAAK,GACT,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,gBAAgB,CAAC;YAEvE,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO;AACR,aAAA;AAED,YAAA,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;AAEhC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;AACV,YAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO;AACR,SAAA;KACF,CAAA;IACH,OAAC,aAAA,CAAA;AAAD,CAAC,EAAA;;;;"}